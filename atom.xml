<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>鲁西西杂货店</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-12-14T04:02:16.480Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wangyunlong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>docker学习系列笔记[docker常用命令]</title>
    <link href="http://yoursite.com/2018/12/14/docker%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E7%AC%94%E8%AE%B0-docker%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/12/14/docker学习系列笔记-docker常用命令/</id>
    <published>2018-12-14T04:01:44.000Z</published>
    <updated>2018-12-14T04:02:16.480Z</updated>
    
    <content type="html"><![CDATA[<p>#查看当前docker版本<br>docker -v</p><p>#查看当前本地所有镜像<br>docker images</p><p>#构造镜像,用法docker build -t 镜像名称 .<br>docker build -t docker_demo .</p><p>#用于容器与主机之间的数据拷贝。用法docker cp 主机文件地址 容器内地址。12d7f14v45cv为容器id。<br>docker cp /www/runoob 12d7f14v45cv:/www/</p><p>#创建一个新的容器并运行，-d为后台执行，-p 9000:3000前面为主机端口，后面是容器端口。docker_demo镜像名<br>docker run -d -p 9000:3000 docker_demo</p><p>#启动已被停止的容器<br>docker start docker_demo</p><p>#关闭已被启动的容器<br>docker stop docker_demo</p><p>#重新启动容器<br>docker restart docker_demo</p><p>#杀掉一个运行中的容器。<br>docker kill -s KILL docker_demo</p><p>#删除一个或多少容器。-f :通过SIGKILL信号强制删除一个运行中的容器-l :移除容器间的网络连接，而非容器本身-v :-v 删除与容器关联的卷<br>docker rm -f docker_demo、docker_demo1</p><p>#在运行的容器中执行命令。104e28f2f072容器id<br>sudo docker exec -it 104e28f2f072 /bin/bash </p><p>#列出容器。 -a:所有容器包含没有运行的<br>docker ps </p><p>#获取容器获取容器的日志 104e28f2f072容器id，-t:显示时间戳<br>docker logs -f -t 104e28f2f072 </p><p>#登陆镜像仓库<br>docker login</p><p>#获取镜像<br>docker pull </p><p>#上传镜像<br>docker push</p><p>#查看指定镜像的创建历史。<br>docker history docker_demo</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#查看当前docker版本&lt;br&gt;docker -v&lt;/p&gt;
&lt;p&gt;#查看当前本地所有镜像&lt;br&gt;docker images&lt;/p&gt;
&lt;p&gt;#构造镜像,用法docker build -t 镜像名称 .&lt;br&gt;docker build -t docker_demo .&lt;/p&gt;
      
    
    </summary>
    
      <category term="docker学习" scheme="http://yoursite.com/categories/docker%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker学习系列笔记[镜像][容器][仓库]</title>
    <link href="http://yoursite.com/2018/12/13/docker%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E7%AC%94%E8%AE%B0-%E9%95%9C%E5%83%8F-%E5%AE%B9%E5%99%A8-%E4%BB%93%E5%BA%93/"/>
    <id>http://yoursite.com/2018/12/13/docker学习系列笔记-镜像-容器-仓库/</id>
    <published>2018-12-13T10:27:46.000Z</published>
    <updated>2018-12-14T02:09:18.482Z</updated>
    
    <content type="html"><![CDATA[<h1 id="镜像、容器、仓库"><a href="#镜像、容器、仓库" class="headerlink" title="镜像、容器、仓库"></a>镜像、容器、仓库</h1><h3 id="docker的核心概念————镜像、容器、仓库，docker大部分操作都是围绕这是三个概念做的"><a href="#docker的核心概念————镜像、容器、仓库，docker大部分操作都是围绕这是三个概念做的" class="headerlink" title="docker的核心概念————镜像、容器、仓库，docker大部分操作都是围绕这是三个概念做的"></a>docker的核心概念————镜像、容器、仓库，docker大部分操作都是围绕这是三个概念做的</h3><h2 id="镜像-images"><a href="#镜像-images" class="headerlink" title="镜像(images)"></a>镜像(images)</h2><pre><code>一个只读模板，可以理解为应用程序运行环境，包含程序运行时所依赖的环境和基本配置</code></pre><h2 id="容器-container"><a href="#容器-container" class="headerlink" title="容器(container)"></a>容器(container)</h2><h2 id="仓库-container"><a href="#仓库-container" class="headerlink" title="仓库(container)"></a>仓库(container)</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;镜像、容器、仓库&quot;&gt;&lt;a href=&quot;#镜像、容器、仓库&quot; class=&quot;headerlink&quot; title=&quot;镜像、容器、仓库&quot;&gt;&lt;/a&gt;镜像、容器、仓库&lt;/h1&gt;&lt;h3 id=&quot;docker的核心概念————镜像、容器、仓库，docker大部分操作都是围绕这是
      
    
    </summary>
    
      <category term="docker学习" scheme="http://yoursite.com/categories/docker%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>docker学习系列笔记[安装及启动]</title>
    <link href="http://yoursite.com/2018/12/13/docker%E5%AD%A6%E4%B9%A0%E7%B3%BB%E5%88%97%E7%AC%94%E8%AE%B0%5B%E5%AE%89%E8%A3%85%E5%8F%8A%E5%90%AF%E5%8A%A8%5D/"/>
    <id>http://yoursite.com/2018/12/13/docker学习系列笔记[安装及启动]/</id>
    <published>2018-12-13T02:24:33.000Z</published>
    <updated>2018-12-13T10:29:56.490Z</updated>
    
    <content type="html"><![CDATA[<h1 id="docker-学习"><a href="#docker-学习" class="headerlink" title="docker 学习"></a>docker 学习</h1><h2 id="安装及启动"><a href="#安装及启动" class="headerlink" title="安装及启动"></a>安装及启动</h2><ul><li><p>CenOs</p><p>  1.通过yum安装：在CenOs7安装时，需要先添加docker下载源<br>  vi /etc/yum.repo.d/docker.repo</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[dockerrepo]</span><br><span class="line">    name=Docker Repository</span><br><span class="line"></span><br><span class="line">    baseurl=https://yum.dockerproject.org/repo/main/centos/7/</span><br><span class="line"></span><br><span class="line">    enabled=1</span><br><span class="line"></span><br><span class="line">    gpgcheck=1</span><br><span class="line"></span><br><span class="line">    gpgkey=https://yum.dockerproject.org/gpg</span><br></pre></td></tr></table></figure>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update</span><br><span class="line">sudo yum install -y docker-engine</span><br></pre></td></tr></table></figure><p>  2.通过脚本安装</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com/ | sh</span><br></pre></td></tr></table></figure><p>  3.启动</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker.service</span><br></pre></td></tr></table></figure></li><li><p>Mac <a href="https://store.docker.com/editions/community/docker-ce-desktop-mac" target="_blank" rel="noopener">下载地址</a></p><p>  1.需注册后下载</p><p>  2.启动（状态栏icon即可启动）</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;docker-学习&quot;&gt;&lt;a href=&quot;#docker-学习&quot; class=&quot;headerlink&quot; title=&quot;docker 学习&quot;&gt;&lt;/a&gt;docker 学习&lt;/h1&gt;&lt;h2 id=&quot;安装及启动&quot;&gt;&lt;a href=&quot;#安装及启动&quot; class=&quot;header
      
    
    </summary>
    
      <category term="docker学习" scheme="http://yoursite.com/categories/docker%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>如何搭建自己的技术文档</title>
    <link href="http://yoursite.com/2018/12/12/%E5%A6%82%E4%BD%95%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E6%8A%80%E6%9C%AF%E6%96%87%E6%A1%A3/"/>
    <id>http://yoursite.com/2018/12/12/如何搭建自己的技术文档/</id>
    <published>2018-12-12T01:39:36.000Z</published>
    <updated>2018-12-12T11:30:26.016Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="学习笔记" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="node.js" scheme="http://yoursite.com/tags/node-js/"/>
    
  </entry>
  
</feed>
